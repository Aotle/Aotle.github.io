<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>常用汇编指令整理</title>
      <link href="/2020/06/25/%E5%B8%B8%E7%94%A8%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4%E6%95%B4%E7%90%86/"/>
      <url>/2020/06/25/%E5%B8%B8%E7%94%A8%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="数据传送指令"><a href="#数据传送指令" class="headerlink" title="数据传送指令"></a>数据传送指令</h2><h3 id="通用数据传送指令"><a href="#通用数据传送指令" class="headerlink" title="通用数据传送指令"></a>通用数据传送指令</h3><h4 id="MOV"><a href="#MOV" class="headerlink" title="MOV"></a>MOV</h4><ul><li>格式：<code>MOV dst,src</code></li><li>功能：将<code>src</code>传送到<code>dst</code></li><li>限制：段寄存器间不可直接相互传送，立即数不能直接送段寄存器，CS 不可作为目的操作数。</li></ul><a id="more"></a> <h4 id="PUSH-amp-POP"><a href="#PUSH-amp-POP" class="headerlink" title="PUSH &amp; POP"></a>PUSH &amp; POP</h4><ul><li>格式：<code>PUSH src</code> &amp; <code>POP dst</code></li><li>功能：将 <code>src</code> 压栈 &amp; 出栈送入 <code>dst</code></li><li>限制：CS 不可作目的操作数</li></ul><h4 id="XCHG"><a href="#XCHG" class="headerlink" title="XCHG"></a>XCHG</h4><ul><li>格式：<code>XCHG dst,src</code></li><li>含义：交换两个操作数内容（Exchange）</li><li>限制：段寄存器不可为操作数，也不能同时为存储单元，两个操作数也不能同时为内存变量。</li></ul><h4 id="XLAT"><a href="#XLAT" class="headerlink" title="XLAT"></a>XLAT</h4><ul><li>格式：<code>XLAT</code></li><li>含义：转换表（Table Look-up Translation）</li><li>功能：把待查表格（表格位于 DS:BX）的一个字节内容送到AL累加器中。在执行该指令前，应将TABLE首地址送至BX寄存器中，然后将待查字节与其在表格中距表首地址位移量送AL,即AL&lt;–((BX)+(AL)). </li></ul><hr><h3 id="地址目标传送指令"><a href="#地址目标传送指令" class="headerlink" title="地址目标传送指令"></a>地址目标传送指令</h3><h4 id="LEA"><a href="#LEA" class="headerlink" title="LEA"></a>LEA</h4><ul><li>格式：<code>LEA dst,src</code></li><li>含义：把地址偏移量传送目的操作数（Load Effective Address）</li><li>功能：取<code>src</code>地址偏移量送<code>dst</code></li><li>注：源操作数必须是存储单元，目的操作数必须是除段寄存器之外的 16 位寄存器。</li></ul><h4 id="LDS-amp-LES"><a href="#LDS-amp-LES" class="headerlink" title="LDS &amp; LES"></a>LDS &amp; LES</h4><ul><li>格式：<code>LDS dst,src</code> &amp; <code>LES dst,src</code></li><li>含义：取双字指针送到目的寄存器和 DS/ES</li><li>功能：从源操作数指定的存储单元中取出 4 字节，前两个字节送到目的寄存器，后两个字节送到 DS/ES。</li></ul><hr><h3 id="标志传送指令"><a href="#标志传送指令" class="headerlink" title="标志传送指令"></a>标志传送指令</h3><h4 id="PUSHF-amp-POPF"><a href="#PUSHF-amp-POPF" class="headerlink" title="PUSHF &amp; POPF"></a>PUSHF &amp; POPF</h4><ul><li>格式：<code>PUSHF</code> &amp; <code>POPF</code></li><li>含义：将标志寄存器压栈/出栈</li><li>功能：PUSHF：执行操作: SP=SP-1,(SP)=PSW的高8位, SP=SP-1, (SP)=PSW的低8位，POPF相反。</li></ul><h4 id="LAHF-amp-SAHF"><a href="#LAHF-amp-SAHF" class="headerlink" title="LAHF &amp; SAHF"></a>LAHF &amp; SAHF</h4><ul><li>格式：<code>LAHF</code> &amp; <code>SAHF</code></li><li>含义：Load(Store) AH from(into) Flags</li><li>功能：将标志寄存器低字节送到 AH &amp; 将 AH 送到标志寄存器低字节</li></ul><hr><h3 id="输入输出指令"><a href="#输入输出指令" class="headerlink" title="输入输出指令"></a>输入输出指令</h3><h4 id="IN-amp-OUT"><a href="#IN-amp-OUT" class="headerlink" title="IN &amp; OUT"></a>IN &amp; OUT</h4><ul><li>格式：<code>IN AL/AX, ADDR</code> &amp; <code>OUT ADDR, AL/AX</code></li><li>功能：从端口地址（寄存器）获取数据送到寄存器（端口地址）</li><li>地址格式：端口地址有两种格式，小于 FFH 时可以是直接写出，否则必须先送入 DX 再使用。</li></ul><hr><h2 id="算术运算指令"><a href="#算术运算指令" class="headerlink" title="算术运算指令"></a>算术运算指令</h2><h3 id="加减法指令"><a href="#加减法指令" class="headerlink" title="加减法指令"></a>加减法指令</h3><h4 id="ADD-amp-ADC"><a href="#ADD-amp-ADC" class="headerlink" title="ADD &amp; ADC"></a>ADD &amp; ADC</h4><ul><li>格式：<code>ADD dst,src</code> &amp; <code>ADC dst,src</code></li><li>含义：（带进位）加法</li><li>功能：dst = src + dst (+ CF)</li></ul><h4 id="INC"><a href="#INC" class="headerlink" title="INC"></a>INC</h4><ul><li>格式：<code>INC dst</code></li><li>功能：自增 1，dst = dst + 1</li></ul><h4 id="SUB-amp-SBB"><a href="#SUB-amp-SBB" class="headerlink" title="SUB &amp; SBB:"></a>SUB &amp; SBB:</h4><ul><li>格式：<code>SUB dst,src</code> &amp; <code>SBB dst,src</code></li><li>含义：（带借位）减法</li><li>功能：dst = dst - src (- CF)</li></ul><h4 id="DEC"><a href="#DEC" class="headerlink" title="DEC:"></a>DEC:</h4><ul><li>格式：<code>DEC dst</code></li><li>功能：自减 1，dst = dst + 1</li></ul><h4 id="NEG"><a href="#NEG" class="headerlink" title="NEG:"></a>NEG:</h4><ul><li>格式：<code>NEG dst</code></li><li>功能：对目的操作数取负，dst = -dst</li></ul><hr><h3 id="乘除法指令"><a href="#乘除法指令" class="headerlink" title="乘除法指令"></a>乘除法指令</h3><h4 id="MUL-amp-IMUL"><a href="#MUL-amp-IMUL" class="headerlink" title="MUL &amp; IMUL"></a>MUL &amp; IMUL</h4><ul><li>格式：<code>IMUL src</code> &amp; <code>MUL src</code></li><li>含义：无符号数/整数乘法</li><li>功能：只有一个源操作数，当其为 8 位时，AX = AL * src，为 16 位时，（DX,AX）= AX * src</li></ul><h4 id="DIV-amp-IDIV"><a href="#DIV-amp-IDIV" class="headerlink" title="DIV &amp; IDIV"></a>DIV &amp; IDIV</h4><ul><li>格式：<code>IDIV src</code> &amp; <code>DIV src</code></li><li>含义：无符号数/整数乘法</li><li>功能：只有一个源操作数作为除数，当其为 8 位时，AX 为被除数，AL 作为商，AH 作为余数。当 src 为 16 位时，（DX,AX）作为被除数，AX 作为商，DX 作为余数。</li></ul><hr><h2 id="逻辑运算与移位指令"><a href="#逻辑运算与移位指令" class="headerlink" title="逻辑运算与移位指令"></a>逻辑运算与移位指令</h2><h3 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h3><table><thead><tr><th align="center">指令</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center"><code>NOT dst</code></td><td align="center">取反，逻辑非</td></tr><tr><td align="center"><code>AND dst,src</code></td><td align="center">逻辑与</td></tr><tr><td align="center"><code>OR dst,src</code></td><td align="center">逻辑或</td></tr><tr><td align="center"><code>XOR dst,src</code></td><td align="center">异或</td></tr></tbody></table><h3 id="算术逻辑移位"><a href="#算术逻辑移位" class="headerlink" title="算术逻辑移位"></a>算术逻辑移位</h3><table><thead><tr><th align="center">指令</th><th align="center">含义</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center"><code>SAL dst,cnt</code></td><td align="center">Shift Arithmetic Left</td><td align="center">算术左移 cnt 位</td></tr><tr><td align="center"><code>SAR dst,cnt</code></td><td align="center">Shift Arithmetic Right</td><td align="center">算术右移 cnt 位</td></tr><tr><td align="center"><code>SHL dst,cnt</code></td><td align="center">Shift Logic Left</td><td align="center">逻辑左移 cnt 位</td></tr><tr><td align="center"><code>SHR dst,cnt</code></td><td align="center">Shift Logic Right</td><td align="center">逻辑右移 cnt 位</td></tr></tbody></table><p>cnt 为 1 或者 CL。算术右移时补最高位，逻辑右移补 0，被移出的移入 CF。</p><h3 id="循环移位"><a href="#循环移位" class="headerlink" title="循环移位"></a>循环移位</h3><table><thead><tr><th align="center">指令</th><th align="center">含义</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center"><code>ROL dst,cnt</code></td><td align="center">Rotate Left</td><td align="center">循环左移 cnt 位</td></tr><tr><td align="center"><code>ROR dst,cnt</code></td><td align="center">Rotate Right</td><td align="center">循环右移 cnt 位</td></tr><tr><td align="center"><code>RCL dst,cnt</code></td><td align="center">Rotate through Carry Left</td><td align="center">带进位左移 cnt 位</td></tr><tr><td align="center"><code>RCR dst,cnt</code></td><td align="center">Rotate through Carry Right</td><td align="center">带进位右移 cnt 位</td></tr></tbody></table><hr><h2 id="字符串操作指令"><a href="#字符串操作指令" class="headerlink" title="字符串操作指令"></a>字符串操作指令</h2><table><thead><tr><th align="center">指令（字节/字）</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center"><code>MOVSB / MOVSW</code></td><td align="center">字符串传送</td></tr><tr><td align="center"><code>CMPSB / CMPSW</code></td><td align="center">字符串比较</td></tr><tr><td align="center"><code>SCASB / SCASW</code></td><td align="center">字符串扫描</td></tr><tr><td align="center"><code>LODSB / LODSW</code></td><td align="center">字符串装入</td></tr><tr><td align="center"><code>STOSB / STOSW</code></td><td align="center">字符串存储</td></tr></tbody></table><p>对于后三条指令，操作使用 AL/AX 寄存器（根据操作数类型决定）。</p><ul><li>源串起始地址为 DS:SI，目的串位于 ES:DI</li><li>每一次操作都会自动修改 SI 和 DI</li><li>DF 标志位可以控制字符串处理方向，DF = 0 递增，DF = 1 递减，可通过 <code>CLD/STD</code> 设置</li><li>处理字符串长度放在 CX 中</li></ul><p>这些指令前可以用重复前缀 <code>REP</code> 反复执行，或是 <code>REPE/REPZ</code> 相等/为零则重复，<code>REPNE/REPNZ</code> 不相等/非零则重复。</p><hr><h2 id="处理器控制指令"><a href="#处理器控制指令" class="headerlink" title="处理器控制指令"></a>处理器控制指令</h2><h3 id="标志处理指令"><a href="#标志处理指令" class="headerlink" title="标志处理指令"></a>标志处理指令</h3><table><thead><tr><th align="center">指令</th><th align="center">含义</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center"><code>CLC</code></td><td align="center">Clear Carry</td><td align="center">CF = 0</td></tr><tr><td align="center"><code>CMC</code></td><td align="center">Complement Carry</td><td align="center">CF = NOT CF</td></tr><tr><td align="center"><code>STC</code></td><td align="center">Set Carry</td><td align="center">CF = 1</td></tr><tr><td align="center"><code>CLD</code></td><td align="center">Clear Direction</td><td align="center">DF = 0</td></tr><tr><td align="center"><code>STD</code></td><td align="center">Set Direction</td><td align="center">DF = 1</td></tr><tr><td align="center"><code>CLI</code></td><td align="center">Clear Interrupt</td><td align="center">IF = 0</td></tr><tr><td align="center"><code>STI</code></td><td align="center">Set Interrupt</td><td align="center">IF = 1</td></tr></tbody></table><hr><h3 id="外部同步指令"><a href="#外部同步指令" class="headerlink" title="外部同步指令"></a>外部同步指令</h3><h4 id="ESC"><a href="#ESC" class="headerlink" title="ESC"></a>ESC</h4><ul><li>格式：<code>ESC 外部操作码，src</code></li><li>功能：用来实现对 8087 协处理器控制。</li></ul><h4 id="WAIT"><a href="#WAIT" class="headerlink" title="WAIT"></a>WAIT</h4><ul><li>格式：<code>WAIT</code></li><li>功能：往往跟在 <code>ESC</code> 后等待，直到 <code>TEST</code> 为低电平。</li></ul><h4 id="LOCK"><a href="#LOCK" class="headerlink" title="LOCK"></a>LOCK</h4><ul><li>格式：<code>LOCK</code></li><li>功能：封锁总线，禁止其他处理器使用总线。</li></ul><hr><h3 id="停机和空操作"><a href="#停机和空操作" class="headerlink" title="停机和空操作"></a>停机和空操作</h3><h4 id="HLT"><a href="#HLT" class="headerlink" title="HLT"></a>HLT</h4><ul><li>格式：<code>HLT</code></li><li>功能：进入暂停状态不进行任何操作，直到复位或 NMI 引脚/INTR 引脚出现中断请求信号。</li></ul><h4 id="NOP"><a href="#NOP" class="headerlink" title="NOP"></a>NOP</h4><ul><li>格式：<code>NOP</code></li><li>功能：耗费三个时钟周期但不进行任何操作。</li></ul><hr><h2 id="控制转移指令"><a href="#控制转移指令" class="headerlink" title="控制转移指令"></a>控制转移指令</h2><h3 id="比较指令"><a href="#比较指令" class="headerlink" title="比较指令"></a>比较指令</h3><h4 id="CMP"><a href="#CMP" class="headerlink" title="CMP"></a>CMP</h4><ul><li>格式：<code>CMP dst,src</code></li><li>功能：用 dst 减去 src，但结果仅反映到标志位，不送回目的操作数。</li><li>常见用法：后跟<code>JZ</code>（相等跳转） &amp; <code>JNZ</code> （不相等跳转）。</li></ul><h4 id="TEST"><a href="#TEST" class="headerlink" title="TEST"></a>TEST</h4><ul><li>格式：<code>TEST dst,src</code></li><li>功能：对两个操作数作逻辑与，结果仅反映到标志位，不送回目的操作数。</li><li>常见用法：测试某一位，为 1<code>JNZ</code>跳转，为 0 <code>JZ</code>跳转。</li></ul><hr><h3 id="无条件转移"><a href="#无条件转移" class="headerlink" title="无条件转移"></a>无条件转移</h3><h4 id="JMP"><a href="#JMP" class="headerlink" title="JMP"></a>JMP</h4><ul><li>格式：<code>JMP dst</code></li><li>功能：无条件跳转到目的地址。</li></ul><p>跳转分为两种，一种是段内转移或近（NEAR）转移，跳转时仅改变 IP 的值，另一种是段间转移或远（FAR）转移，此时跳转长度超过 IP 最大值，CS 和 IP 都要改变。这两种情况都提供直接转移和间接转移两种方法，前者直接给出目的地址，后者将目的地址放在寄存器或者存储单元中。</p><table><thead><tr><th align="center">类型</th><th align="center">方式</th><th align="center">寻址目标</th><th align="center">举例</th></tr></thead><tbody><tr><td align="center">段内</td><td align="center">直接</td><td align="center">立即短转移（8位）</td><td align="center"><code>JMP SHORT 标号</code></td></tr><tr><td align="center">段内</td><td align="center">直接</td><td align="center">立即近转移（16位）</td><td align="center"><code>JMP NEAR PTR 标号</code>或<code>JMP 标号</code></td></tr><tr><td align="center">段内</td><td align="center">间接</td><td align="center">寄存器（16位）</td><td align="center"><code>JMP BX</code></td></tr><tr><td align="center">段内</td><td align="center">间接</td><td align="center">存储器（16位）</td><td align="center"><code>JMP WORD PTR 5[BX]</code></td></tr><tr><td align="center">段间</td><td align="center">直接</td><td align="center">立即转移（32位）</td><td align="center"><code>JMP FAR PTR 标号</code></td></tr><tr><td align="center">段间</td><td align="center">间接</td><td align="center">存储器（32位）</td><td align="center"><code>JMP DWORD PTR[REG]</code></td></tr></tbody></table><h4 id="CALL"><a href="#CALL" class="headerlink" title="CALL"></a>CALL</h4><ul><li>格式：<code>CALL 过程名</code></li><li>功能：调用过程。</li></ul><p>同样有段内与段间，直接与间接的区分，指令格式与 JMP 类似。</p><table><thead><tr><th align="center">类型</th><th align="center">方式</th><th align="center">寻址目标</th><th align="center">举例</th></tr></thead><tbody><tr><td align="center">段内</td><td align="center">直接</td><td align="center">立即调用</td><td align="center"><code>CALL 标号</code></td></tr><tr><td align="center">段内</td><td align="center">间接</td><td align="center">寄存器（16位）</td><td align="center"><code>CALL BX</code></td></tr><tr><td align="center">段内</td><td align="center">间接</td><td align="center">存储器（16位）</td><td align="center"><code>CALL WORD PTR 5[BX]</code></td></tr><tr><td align="center">段间</td><td align="center">直接</td><td align="center">立即调用（32位）</td><td align="center"><code>CALL FAR PTR 标号</code></td></tr><tr><td align="center">段间</td><td align="center">间接</td><td align="center">存储器（32位）</td><td align="center"><code>CALL DWORD PTR[REG]</code></td></tr></tbody></table><h4 id="RET"><a href="#RET" class="headerlink" title="RET"></a>RET</h4><ul><li>格式：<code>RET (n)</code></li><li>功能：过程返回。如果有 n 则在弹出返回地址后再弹出 n 个字节，这一目的是让调用过程可以传递参数。</li></ul><hr><h3 id="条件转移"><a href="#条件转移" class="headerlink" title="条件转移"></a>条件转移</h3><ul><li>格式：<code>操作符 标号</code></li><li>功能：根据操作符，满足即跳转到标号。</li></ul><h4 id="直接标志转移"><a href="#直接标志转移" class="headerlink" title="直接标志转移"></a>直接标志转移</h4><table><thead><tr><th align="center">指令</th><th align="center">测试条件</th><th align="center">判断条件</th></tr></thead><tbody><tr><td align="center"><code>JC</code>/<code>JNC</code></td><td align="center">CF = 1 / 0</td><td align="center">有 / 无进位</td></tr><tr><td align="center"><code>JZ</code>/<code>JNZ</code></td><td align="center">ZF = 1 / 0</td><td align="center">相等 / 不相等</td></tr><tr><td align="center"><code>JE</code>/<code>JNE</code></td><td align="center">ZF = 1 / 0</td><td align="center">相等 / 不相等</td></tr><tr><td align="center"><code>JS</code>/<code>JNS</code></td><td align="center">SF = 1 / 0</td><td align="center">符号为负 / 正</td></tr><tr><td align="center"><code>JO</code>/<code>JNO</code></td><td align="center">OF = 1 / 0</td><td align="center">溢出 / 无溢出</td></tr><tr><td align="center"><code>JP</code>/<code>JNP</code></td><td align="center">PF = 1 / 0</td><td align="center">为偶数 / 奇数</td></tr><tr><td align="center"><code>JPE</code>/<code>JPO</code></td><td align="center">PF = 1 / 0</td><td align="center">为偶数 / 奇数</td></tr></tbody></table><h4 id="无符号数比较测试"><a href="#无符号数比较测试" class="headerlink" title="无符号数比较测试"></a>无符号数比较测试</h4><table><thead><tr><th align="center">指令</th><th align="center">测试条件</th><th align="center">判断条件</th></tr></thead><tbody><tr><td align="center"><code>JA</code>/<code>JNBE</code></td><td align="center">CF ∨∨ ZF = 0</td><td align="center">高于 / 不低于等于</td></tr><tr><td align="center"><code>JAE</code>/<code>JNB</code></td><td align="center">CF = 0</td><td align="center">高于等于 / 不低于</td></tr><tr><td align="center"><code>JNAE</code>/<code>JB</code></td><td align="center">CF = 1</td><td align="center">不高于等于 / 低于</td></tr><tr><td align="center"><code>JNA</code>/<code>JBE</code></td><td align="center">CF ∨∨ ZF = 1</td><td align="center">不高于 / 低于等于</td></tr></tbody></table><h4 id="有符号数比较测试"><a href="#有符号数比较测试" class="headerlink" title="有符号数比较测试"></a>有符号数比较测试</h4><table><thead><tr><th align="center">指令</th><th align="center">测试条件</th><th align="center">判断条件</th></tr></thead><tbody><tr><td align="center"><code>JG</code>/<code>JNLE</code></td><td align="center">(SF XORXOR OF) ∨∨ ZF = 0</td><td align="center">大于 / 不小于等于</td></tr><tr><td align="center"><code>JGE</code>/<code>JNL</code></td><td align="center">SF XORXOR OF = 0</td><td align="center">大于等于 / 不小于</td></tr><tr><td align="center"><code>JNGE</code>/<code>JL</code></td><td align="center">SF XORXOR OF = 1</td><td align="center">不大于等于 / 小于</td></tr><tr><td align="center"><code>JNG</code>/<code>JLE</code></td><td align="center">(SF XORXOR OF) ∨∨ ZF = 1</td><td align="center">不大于 / 小于等于</td></tr></tbody></table><hr><h3 id="循环控制指令"><a href="#循环控制指令" class="headerlink" title="循环控制指令"></a>循环控制指令</h3><h4 id="LOOP"><a href="#LOOP" class="headerlink" title="LOOP"></a>LOOP</h4><ul><li>格式：<code>LOOP 标号</code></li><li>功能：跳至标号继续循环，每执行一次 CX 减一，若减一后为零则不跳转。</li></ul><h4 id="LOOPE-amp-LOOPNE"><a href="#LOOPE-amp-LOOPNE" class="headerlink" title="LOOPE &amp; LOOPNE"></a>LOOPE &amp; LOOPNE</h4><ul><li>格式：<code>LOOPE 标号</code> &amp; <code>LOOPNE 标号</code></li><li>功能：（不）相等时循环，其他与 LOOP 相同。</li></ul><h4 id="LOOPZ-amp-LOOPNZ"><a href="#LOOPZ-amp-LOOPNZ" class="headerlink" title="LOOPZ &amp; LOOPNZ"></a>LOOPZ &amp; LOOPNZ</h4><ul><li>格式：<code>LOOPZ 标号</code> &amp; <code>LOOPNZ 标号</code></li><li>功能：结果（不）为零时循环，其他与 LOOP 相同。</li></ul><h4 id="JCXZ"><a href="#JCXZ" class="headerlink" title="JCXZ"></a>JCXZ</h4><ul><li>格式：<code>JCXZ 标号</code></li><li>功能：CX 为零则跳转，否则就往下执行， CS 不会减一。</li></ul><hr><h3 id="中断指令"><a href="#中断指令" class="headerlink" title="中断指令"></a>中断指令</h3><h4 id="INT"><a href="#INT" class="headerlink" title="INT"></a>INT</h4><ul><li>格式：<code>INT n</code></li><li>功能：调用 n 对应的功能。</li></ul><h4 id="INTO"><a href="#INTO" class="headerlink" title="INTO"></a>INTO</h4><ul><li>格式：<code>INTO</code></li><li>功能：如果溢出标识 OF 为 1 则产生类型为 4 的中断，否则就继续向下执行。</li></ul><h4 id="IRET"><a href="#IRET" class="headerlink" title="IRET"></a>IRET</h4><ul><li>格式：<code>IRET</code></li><li>功能：中断返回。</li></ul><hr><h2 id="BIOS-amp-DOS-调用"><a href="#BIOS-amp-DOS-调用" class="headerlink" title="BIOS &amp; DOS 调用"></a>BIOS &amp; DOS 调用</h2><p>调用这两者用的是 INT 中断指令。</p><ul><li>格式：<code>INT n</code></li><li>功能：调用 n 对应的功能。</li></ul><p>其中 n = 21H 是最为强大的 DOS 中断。一般调用中断须先将参数放入指定寄存器，功能号放入 AH，子功能号放入 AL，例如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MOV AX,4C00H </span><br><span class="line">INT 21H</span><br></pre></td></tr></table></figure><p>常用的功能号有</p><table><thead><tr><th align="center">功能号</th><th align="center">功能</th><th align="center">参数</th></tr></thead><tbody><tr><td align="center">01H</td><td align="center">输入一个字符</td><td align="center">AL = 输入字符</td></tr><tr><td align="center">0AH</td><td align="center">输入字符串</td><td align="center">DX:DX = 缓冲区首地址</td></tr><tr><td align="center">02H</td><td align="center">显示一个字符</td><td align="center">DL = 显示字符</td></tr><tr><td align="center">09H</td><td align="center">显示 $ 结尾的字符串</td><td align="center">DX:DX = 字符串首地址</td></tr></tbody></table><hr><h2 id="常用伪指令"><a href="#常用伪指令" class="headerlink" title="常用伪指令"></a>常用伪指令</h2><h3 id="数值回送操作符"><a href="#数值回送操作符" class="headerlink" title="数值回送操作符"></a>数值回送操作符</h3><h4 id="TYPE"><a href="#TYPE" class="headerlink" title="TYPE"></a>TYPE</h4><ul><li>格式：<code>TYPE expression_r(or label)</code></li><li>功能：返回变量以字节数表示的类型 &amp; 返回标号类型的数值</li></ul><h4 id="LENGTH"><a href="#LENGTH" class="headerlink" title="LENGTH"></a>LENGTH</h4><ul><li>格式：<code>TYPE variable</code></li><li>功能：对于变量使用DUP的情况,将回送分配给该变量的单元数; 对其它情况则回送1</li></ul><h4 id="SIZE"><a href="#SIZE" class="headerlink" title="SIZE"></a>SIZE</h4><ul><li>格式：<code>TYPE variable</code></li><li>功能：回送分配给该变量的字节数 = TYPE * LENGTH</li></ul><h4 id="OFFSET"><a href="#OFFSET" class="headerlink" title="OFFSET"></a>OFFSET</h4><ul><li>格式：<code>TYPE variable (or lable)</code></li><li>功能：回送变量或标号的偏移地址</li></ul><h4 id="SEG"><a href="#SEG" class="headerlink" title="SEG"></a>SEG</h4><ul><li>格式：<code>TYPE variable (or lable)</code></li><li>功能：回送变量或标号的段地址</li></ul><h3 id="数据定义语句"><a href="#数据定义语句" class="headerlink" title="数据定义语句"></a>数据定义语句</h3><ul><li>DB 定义字节,表示其后每个操作数占有一个字节(1Byte)单元</li><li>DW 定义字,表示表示其后每个操作数占有一个字(2Byte)单元</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data_byte     DB      10 , 4 , 10H , ?        ;共定义了4个字节,其中 &#39;?&#39; 是保留单元</span><br><span class="line"></span><br><span class="line">data_word    DW    100 DUP(?)            ;定义100个字的存储空间</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 汇编 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 8086汇编 </tag>
            
            <tag> 考试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>短句分享</title>
      <link href="/2020/06/23/%E7%9F%AD%E5%8F%A5%E5%88%86%E4%BA%AB/"/>
      <url>/2020/06/23/%E7%9F%AD%E5%8F%A5%E5%88%86%E4%BA%AB/</url>
      
        <content type="html"><![CDATA[<p>1/</p><p>四月，应该坦坦荡荡，鸽子从屋檐拥向晴空，青藤从粉墙探向枝头，新茶从瓷碗吻向老桌，传说从故纸堆里挣脱，<strong>你带着苍绿的情书，生锈的戒指，以及喑哑的晚钟，风尘仆仆 ，从远方，奔向我 ，趁风月无边，浮了这盅千里烟波，从此隐入山中，陪你赏朝昏夕落。</strong></p><p>2/</p><p>你是一台磨人的机器 盛产爱和诗意</p><p>3/</p><p>我喜欢的少年打天上来</p><p>他无意掀翻烛火</p><p>点燃我双眸盛满的暮色</p><a id="more"></a><p> 4/</p><p>ᴹᵉᵉᵗ ʸᵒᵘ ᶠᵘˡˡ ᵒᶠ ˡᵒᵛᵉ / ˢᵉᵉ ᵉᵛᵉʳʸᵗʰⁱⁿᵍ ⁱⁿ ᵗʰᵉ ʷᵒʳˡᵈ / ᶠᵃˡˡ ⁱⁿ ˡᵒᵛᵉ ʷⁱᵗʰ ʸᵒᵘ.</p><p>遇见你爱意汹涌，看世间万物，都浪漫心动。  </p><p> 5/</p><p>山野千里，你是我藏在星星里的浪漫，无尽的温柔与风情都隐匿在皎月清辉中，今晚月色极美，我双手为你奉上</p><p>6/</p><p> 纯洁无暇的善良不够善良。</p><p>遭遇过一切挫折与人性考验后的善良温柔有力量。</p><p>7/</p><p> 很喜欢「日暮里」和「次日清晨」这两个词。<strong>一天的喜怒哀乐都溜进日暮里，在次日清晨给人以重新开始的无限可能。</strong> 疲倦落入温柔暮色里，我会在次日清晨醒着眼睛。</p><p>8/</p><p>あなたの优しさに私は心を引かれた</p><p>你的温柔打动了我的心</p><p>9/</p><p>我是如此单独而完整</p><p>在无数个夜晚我独自顶着冷风</p><p>伫立在老橘树下的桥头</p><p>只为听一曲夜莺的哀歌</p><p>我倚暖了石栏上的青苔</p><p>青苔凉透了我的心坎</p><p>但夜莺不来夜莺不来</p><p>——徐志摩 《我是如此单独而完整》</p><p>10/</p><p>千般荒凉，以此为梦。万里蹀躞，以此为归。</p><p>——余秋雨</p><img src='1.jpg' alt='落日熔金，暮云合璧'><p>11/</p><p> 太阳未出时，全世界都做一个梦，唯有月亮是真实的；</p><p>太阳出来后，全世界都真实了，唯有月亮像一个梦。</p><p>——《冬牧场》</p><p>12/</p><p>ᵂᵃⁿᵗ ᵗᵒ ᵇᵉ ʸᵒᵘʳ / ᵖⁱˡˡᵒʷ ᵇᵒᵒᵏ / ᶜᵃᵗ ⁱⁿ ʸᵒᵘʳ ᵃʳᵐˢ / ˡᵒᵛᵉᵈ ᵒⁿᵉ.</p><p>想做你的枕边书，怀中猫，意中人。 </p><p>13/</p><p>你踩着漫长星辰的光而来，而我在你到来的刹那便失了心智，从此山河过往，凛冬天明，你都有我。</p><p>14/</p><p>树在  山在  大地在</p><p>岁月在</p><p><strong>我在</strong></p><p><strong>你还要怎样更好的世界?</strong></p><p>——张晓风《我在》</p><p>15/</p><p>ᴱˣᵖᵉʳⁱᵉⁿᶜⁱⁿᵍ ᵃ ᵖᵉʳˢᵒⁿ’ˢ ˡᵒⁿᵉˡⁱⁿᵉˢˢ, ᵇᵘᵗ ᵃˡˢᵒ ᵉˣᵖᵉʳⁱᵉⁿᶜⁱⁿᵍ ᵗʰᵉ ᵍⁱᶠᵗ ᵒᶠ ˡᵒⁿᵉˡⁱⁿᵉˢˢ.</p><p>经历着一个人的孤独，也经历着孤独的馈赠。</p><p>16/</p><p>我是个俗气至顶的人，</p><p>见山是山，见海是海，见花便是花。</p><p>唯独见了你，</p><p>云海开始翻涌，江潮开始澎湃，</p><p>昆虫的小触须挠着全世界的痒。</p><p>你无需开口，我和天地万物便通通奔向你。</p><p>17/</p><p>余光中先生说，月色与雪色之间，你是第三种绝色，于我而言,日月星辉之中,你是第四种难得。</p><p>18/</p><p>昼も夜も春も渡らず，夜も眠れない星</p><p>白日春不渡，黑夜万梦星。</p><p>19/</p><p>我是半坏街灯 是将冷煤炭 闪闪烁烁 明明暗暗 只想把有限的光和热 全都给你。</p><p> 20/</p><p>我怀念那个秋天，但我不会因此止步不前我会把有关你的记忆隐于心弦，当然不包括那偶尔泄出的一些思念。</p><img src='2.jpg' alt='风月天边有'><p>21/</p><p>ᵀʰᵉ ᵍʳᵉᵃᵗᵉˢᵗ ʳᵒᵐᵃⁿᶜᵉ ⁱˢ ᵗʰᵉ ᶠᵒᶜᵘˢ ᵒᶠ ᵒⁿᵉ’ˢ ˡⁱᶠᵉ.</p><p>最盛大的浪漫是终其一生的专注。</p><p> 22/</p><p>我希望有个如你一般的人 如山间清爽的风如古城温暖的光，从清晨到夜晚，由山野到书房，不怕路途遥远，只要最后是你就好。</p><p>23/</p><p>我想和你一起生活</p><p>在某个小镇</p><p>共享无尽的黄昏</p><p>和绵绵不绝的钟声</p><p>——茨 维塔耶娃</p><p>24/</p><p>ᴵ ʰᵃᵛᵉ ˢᵃᵛᵉᵈ ᵗᵉⁿᵈᵉʳⁿᵉˢˢ ᵃⁿᵈ ʳᵒᵐᵃⁿᶜᵉ ᶠᵒʳ ᵃ ˡᵒⁿᵍ ᵗⁱᵐᵉ. ᴵ ʷᵃⁿᵗ ᵗᵒ ᵍⁱᵛᵉ ⁱᵗ ᵗᵒ ʸᵒᵘ ᵃˡˡ ᵃᵗ ᵒⁿᶜᵉ.</p><p>攒了好久的温柔与浪漫，想要一次性都给你。 </p><p>25/ </p><p>岁月极美，在于它必然的流逝。 </p><p>春花、秋月、夏日、冬雪。</p><p> 26/</p><p>今夜（こんや）は月（つき）が綺麗（きれい）ですね。</p><p>今晚月色真美。</p><p>27/</p><p><strong>世人慌慌张张，不过是图碎银几两。偏偏这碎银几两，能解世间惆怅，可让父母安康，可护幼子成长，但这碎银几两，也断了儿时的念想，让少年染上沧桑，压弯了脊梁。</strong></p><p>28/</p><p>我是春天里出生的绿皮野兽</p><p>在秋夜里吞下十瓣月亮</p><p>——《桔子》高鹤鸣</p><p>29/</p><p>夏天属于散文和柠檬，属于裸露和慵懒，属于关于回归的想像的永恒闲置，属于稀见的长笛和赤裸的双足，还有八月的卧室卧室中绞结的床单和周日的盐</p><p>——德里克·沃尔科特《夏天的布里克街》</p><p>30/</p><p>读书到某个相似段落的恍神，在外喝冷饮唤起味觉的苏醒，抑或是整理旧衣物时不落痕迹的叹息。这些由你衍生出来的琐碎，在数年如一日的白夜里，融汇成轻柔而遥远的光河。不再触及我。却依然照耀我。</p><img src='3.jpg' alt='凉风有信，风月无边'><p>31/</p><p>最短暂的幸福感和最漫长的余韵，在到达最顶峰的时候迫近死亡，每个人的生命中都有一段summer time。</p><p>32/</p><p>你已穿上书页般的衣冠</p><p>步行在恭敬的瓶形尸首间</p><p>——张枣《十月之水》</p><p>33/</p><p>谁端着夜的筛子<br>将一粒粒光豆豆<br>不停地筛了出来<br>——《星空》</p><p>34/</p><p>我是馊掉的柳丁汁和浓汤，我是爬满虫卵的玫瑰和百合，我是灯火流离的都市里明明存在却没人看得到也没人需要的北极星。</p><p>——林奕含《房思琪的初恋乐园》</p><p>35/</p><p><strong>夕阳染病<br>像潦倒的诗人<br>醉落西湖</strong><br>——《夕阳西下》周末有约</p><p>36/</p><p>阳光退出院子，退得那么慢，其间还有多次停顿，如同一种哽咽。</p><p>——余秀华《月光落在左手上》</p><p>37/</p><p>掉头一去是风吹黑发，回首再来已雪满白头。</p><p>下次你路过，人间已无我。</p><p>——余光中《欢呼哈雷》</p><p>38/</p><p>他来时风尘仆仆，停时依旧是光。</p><p>——高台树色《白日事故》</p>]]></content>
      
      
      <categories>
          
          <category> 摘抄 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 短句 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>夏天的风</title>
      <link href="/2020/06/21/blog-%E8%BF%81%E7%A7%BB/"/>
      <url>/2020/06/21/blog-%E8%BF%81%E7%A7%BB/</url>
      
        <content type="html"><![CDATA[<blockquote><p>“在夏天，我们吃绿豆、桃、樱桃和甜瓜。在各种意义上都漫长且愉快，日子发出声响。”</p><p>​                                                                                                ——罗伯特·瓦尔泽《夏天》</p></blockquote><p>喜欢夏天，大概是因为夏日有一种特别的感觉吧。</p><p>夏天和雨天一样，有一种特别的韵味。夏天也很有故事感，记忆中好多事都是发生在夏天。夏天也有童年，青春的味道。</p><p>尤其是夏日的午后，蝉声鸣叫，很多人在午睡，全世界就好像安静了下来，只剩自然的声音。</p><p>时光流逝得很慢，蓝蓝的天空，强烈的阳光，喜欢的人。是我爱得无法自拔的夏日～</p><p>印象最深的仍然是那个起风了的夏天，当时的冰淇淋很冰也很甜。</p><a id="more"></a><p>暗晚风吹起你鬓间的发，抚平回忆留下的疤，你的眼中明交杂，一笑生花。当时是18年的夏天，也是高中毕业的那个夏天。有很复杂的感情，怀念那时的同学，怀念高三的教室，怀念当初那个懵懂无知的自己，怀念着我的青春。</p><p>我们回忆18年的夏天，不是回忆某一年的夏天，每个夏天都不一样，每个人青春的基调却是一样的，有着遗憾，仓促，惋惜</p><p>在这之中，我们变成为现在的自己</p><p>不一定说是我们一定变好了，只是，我们终究长大了</p><p>我们怀念的夏天，只属于我们这一代人</p><p>每一代人的青春都只属于自己</p><p>就像我曾经深爱的你</p><p>后悔吗？</p><p>不知道</p><p>太多太多理由让我喜欢这个季节了</p><p>湛蓝湛蓝的天空，饱满饱满的云朵，树林阴影里穿过凉风，白杨树浓密的叶子簌簌作响，一望无际的田野带着幽香，浓烈的太阳晒得人直发昏，汽车飞驰而过会卷起街道上的尘土，深井里有清冽的凉水，地窖里有甘甜的西瓜，阴凉土房里有的舒服过堂风，漫长的午觉伴着声嘶力竭的蝉鸣。</p><p>学校里还有开了的合欢树，有月季花田，有玉簪，有大湖，外面的小南门里有炸鸡，有热干面，有寿司，有炸串，有麻辣烫，有西瓜。</p><p>在学校，每次下晚课回去的路上很热闹，有情侣争吵，也有热情调笑，他们走在一起，就像青春飘荡在夏风中</p><p>去年夏天我一个人走了很多没走过的路，也遇见和失去了喜欢的人</p><p>我看见了烟波画船，云霞翠轩<br>感受到了朝飞暮卷，雨丝风片</p><p>晚上有时会在小区里溜达，好天气的夜空中能看见浓烈的流云，云片被夜风吹的翻飞。有时也能看见星星。有时也经常和朋友一起去烧烤，坐在露天烧烤摊，吃很多牛板筋，烤土豆，豆角，金针菇，喝下大杯的啤酒，满桌子的小龙虾残骸还有蛤蜊壳。</p><p>夕阳在楼区间若隐若现，晚霞也都被分割成一条一条。</p><blockquote><p>绿槐高柳咽新蝉，薰风初入弦。碧纱窗下水沉烟，棋声惊昼眠。微雨过，小荷翻，榴花开欲然。玉盆纤手弄清泉，琼珠碎却圆。·我喜欢夏日的永昼，我喜欢在多风的黄昏独坐在傍山的阳台上。小山谷里稻浪推涌，美好的稻香翻腾着。慢慢地，绚丽的云霞被浣净了，柔和的晚星一一就位。——张晓风《我喜欢》</p></blockquote><blockquote><p>微风拂过海面，蝉鸣漾入云间。叽叽喳喳的笑声在沙滩上留下深浅不一的足迹，盛暑阳光夺神炫目，模糊了远近的归船。</p></blockquote><p>我希望今年的夏天还能走很多很多的路，吃很多烧烤，西瓜和冰棍。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
